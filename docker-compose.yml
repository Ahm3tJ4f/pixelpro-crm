version: "3.8"

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5432:5432
    volumes:
      - ./database/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql

  redis:
    image: redis:7-alpine
    ports:
      - 6379:6379
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes --protected-mode yes

  api:
    build: ./backend
    ports:
      - 80:80
    depends_on:
      - postgres
      - redis
    environment:
      DOCKER_ENV: true
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: postgres
      REDIS_HOST: redis
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      SECRET_KEY: ${SECRET_KEY}
      ALGORITHM: ${ALGORITHM}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
      REFRESH_TOKEN_EXPIRE_DAYS: ${REFRESH_TOKEN_EXPIRE_DAYS}
      CITIZEN_EXPIRE_DAYS: ${CITIZEN_EXPIRE_DAYS}
      JITSI_JWT_SECRET: ${JITSI_JWT_SECRET}
      JITSI_ISSUER: ${JITSI_ISSUER}
      JITSI_AUDIENCE: ${JITSI_AUDIENCE}
      JITSI_SUBJECT: ${JITSI_SUBJECT}
      JITSI_GROUP: ${JITSI_GROUP}
      JITSI_TOKEN_EXPIRY_HOURS: ${JITSI_TOKEN_EXPIRY_HOURS}
    command: >
      sh -c "
        echo 'Waiting for postgres...' &&
        while ! nc -z postgres 5432; do
          sleep 1
        done &&
        echo 'Waiting for redis...' &&
        while ! nc -z redis 6379; do
          sleep 1
        done &&
        echo 'PostgreSQL and Redis started' &&
        alembic upgrade head &&
        fastapi run src/main.py --port 80
      "
